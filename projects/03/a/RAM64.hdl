// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM64.hdl

/**
 * Memory of 64 registers, each 16-bit wide.  
 * The chip facilitates read and write operations, as follows:
 *     Read:  out(t) = RAM64[address(t)](t)
 *     Write: If load(t-1) then RAM64[address(t-1)](t) = in(t-1)
 * In words: the chip always outputs the value stored at the memory 
 * location specified by address. If load == 1, the in value is loaded 
 * into the memory location specified by address.  This value becomes 
 * available through the out output starting from the next time step.
 */

CHIP RAM64 {
    IN in[16], load, address[6];
    OUT out[16];

    PARTS:
    
    RAM8(in=in, out=r0, load=l0, address=address[3..5]);
	RAM8(in=in, out=r1, load=l1, address=address[3..5]);
	RAM8(in=in, out=r2, load=l2, address=address[3..5]);
	RAM8(in=in, out=r3, load=l3, address=address[3..5]);
	RAM8(in=in, out=r4, load=l4, address=address[3..5]);
	RAM8(in=in, out=r5, load=l5, address=address[3..5]);
	RAM8(in=in, out=r6, load=l6, address=address[3..5]);
	RAM8(in=in, out=r7, load=l7, address=address[3..5]);
	
	DMux8Way(in=load, sel=address[0..2], a=l0, b=l1, c=l2, d=l3, e=l4, f=l5, g=l6, h=l7);
	Mux8Way16(a=r0, b=r1, c=r2, d=r3, e=r4, f=r5, g=r6, h=r7, sel=address[0..2], out=out);
}
